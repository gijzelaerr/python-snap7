name: build-and-publish
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
env:
  snap7-archive-url: https://sourceforge.net/projects/snap7/files/1.4.2/snap7-full-1.4.2.7z/download
jobs:
  windows-build:
    name: Build binary wheels for windows
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install choco packages
        run: choco install 7zip wget python

      - name: Cache snap7-archive
        id: snap7-archive
        uses: actions/cache@v2
        with:
          path: snap7-full-1.4.2.7z
          key: ${{ env.snap7-archive-url }}

      - name: Get snap7
        if: steps.snap7-archive.outputs.cache-hit != 'true'
        run: |
          wget -O snap7-full-1.4.2.7z --content-disposition -c ${{ env.snap7-archive-url }}

      - name: Extract archive
        run: 7z x snap7-full-1.4.2.7z

      - name: update wheel
        run: python3 -m pip install wheel --upgrade

      - name: build wheel
        run: python3 setup.py bdist_wheel --plat-name win_amd64

      - name: move dll to ./lib
        run: .github/build_scripts/repack_wheels_windows.ps1 Win64

      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*.whl

  test-windows:
    name: testing windows
    needs: windows-build
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pytest
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install pytest
      
      - uses: actions/download-artifact@v2
        with:
          name: wheels
          path: wheelhouse

      - name: install python-snap7
        run: python3 -m pip install (ls wheelhouse/*win_amd64.whl)

      - name: Run pytest
        run: |
          which pytest
          pytest test/test_server.py test/test_util.py test/test_client.py test/test_partner.py

  linux-build:
    name: Build binary wheels for linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - arch: x86_64
            makefile: x86_64_linux.mk
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Debian packages
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y python3-pip python3-setuptools p7zip

      - name: Cache snap7-archive
        id: snap7-archive
        uses: actions/cache@v2
        with:
          path: snap7-full-1.4.2.7z
          key: ${{ env.snap7-archive-url }}

      - name: Get snap7
        if: steps.snap7-archive.outputs.cache-hit != 'true'
        run: |
          wget -O snap7-full-1.4.2.7z --content-disposition -c ${{ env.snap7-archive-url }}

      - name: Extract archive
        run: 7z x snap7-full-1.4.2.7z

      - name: copy files
        run: |
          mkdir src
          cp snap7-full-1.4.2/release/Wrappers/c-cpp/snap7.h src

      - name: Install cibuildwheel and wheel
        run: python3 -m pip install cibuildwheel==1.10.0 wheel --upgrade

      - name: Build wheels linux
        run: python3 -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: cp3*-manylinux_x86_64
          CIBW_SKIP: cp35-* pp*
          CIBW_BEFORE_ALL_LINUX: cd snap7-full-1.4.2/build/unix/;make -f x86_64_linux.mk install

      - name: move shared library to ./lib
        run: bash .github/build_scripts/repack_wheels_linux.sh

      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*.whl

  osx-build:
    name: Build binary wheels for osx
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache snap7-archive
        id: snap7-archive
        uses: actions/cache@v2
        with:
          path: snap7-full-1.4.2.7z
          key: ${{ env.snap7-archive-url }}

      - name: Get snap7
        if: steps.snap7-archive.outputs.cache-hit != 'true'
        run: |
          wget -nv -O snap7-full-1.4.2.7z --content-disposition -c ${{ env.snap7-archive-url }}

      - name: Extract archive
        run: 7z x snap7-full-1.4.2.7z

      - name: copy files
        run: |
          mkdir src
          cp snap7-full-1.4.2/release/Wrappers/c-cpp/snap7.h src
          pushd snap7-full-1.4.2/build/osx/
          make -f x86_64_osx.mk all
          cp ../bin/x86_64-osx/libsnap7.dylib  /usr/local/lib
          install_name_tool -id /usr/local/lib/libsnap7.dylib /usr/local/lib/libsnap7.dylib

      - name: Install cibuildwheel
        run: python3 -m pip install cibuildwheel==1.10.0 wheel --upgrade

      - name: Build wheels
        run: python3 -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: cp3*-macosx*
          CIBW_SKIP: cp35-* pp*
          CIBW_BUILD_VERBOSITY: 1

      - name: move shared library to ./lib
        run: bash .github/build_scripts/repack_wheels_macos.sh

      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*.whl

  create-matrix:
    name: Create matrix for testing wheels
    needs: [linux-build, osx-build]
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - uses: actions/download-artifact@v2
        with:
          name: wheels
          path: wheelhouse
      
      - name: test run script
        run: bash .github/build_scripts/create_matrix.sh
      
      - id: set-matrix
        run: echo "::set-output name=matrix::$(bash .github/build_scripts/create_matrix.sh)"

  test-linux-and-macos:
    name: testing wheels
    needs: create-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{fromJSON(needs.create-matrix.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.arch }}

      - name: Install pytest
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install pytest
      
      - uses: actions/download-artifact@v2
        with:
          name: wheels
          path: wheelhouse

      - name: install python-snap7
        run: python3 -m pip install wheelhouse/${{ matrix.package }}

      - name: Run pytest
        run: |
          which pytest
          pytest test/test_server.py test/test_util.py test/test_client.py

      - name: Run tests required sudo
        if: ${{ runner.os == 'Linux'}}
        run: sudo /opt/hostedtoolcache/Python/${{ matrix.python-version }}*/x64/bin/pytest test/test_partner.py

      - name: Run tests required sudo
        if: ${{ runner.os == 'macOS'}}
        run: sudo pytest test/test_partner.py

  publish-to-TestPyPI:
    name: publish wheels to TestPyPI
    needs: [test-linux-and-macos, test-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: wheels
          path: wheelhouse

      - name: Publish distribution to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYTHON_SNAP7_TEST_PYPI }}
          repository_url: https://test.pypi.org/legacy/
          packages_dir: wheelhouse
          verbose: true

  publish-to-PyPI:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    name: publish wheels to PyPI
    needs: [test-linux-and-macos, test-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: wheels
          path: wheelhouse

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYTHON_SNAP7_PYPI }}
          packages_dir: wheelhouse
