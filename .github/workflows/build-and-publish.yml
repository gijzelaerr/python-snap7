name: build-and-publish
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
# on:
#   push:
#     tags:
#       - '*'
env:
  snap7-archive-url: https://sourceforge.net/projects/snap7/files/1.4.2/snap7-full-1.4.2.7z/download
jobs:
  linux-build:
    name: Build binary wheels for linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - arch: x86_64
            makefile: x86_64_linux.mk
          - arch: i686
            makefile: i386_linux.mk
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Debian packages
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y python3-pip python3-setuptools p7zip

      - name: Cache snap7-archive
        id: snap7-archive
        uses: actions/cache@v2
        with:
          path: snap7-full-1.4.2.7z
          key: ${{ env.snap7-archive-url }}

      - name: Get snap7
        if: steps.snap7-archive.outputs.cache-hit != 'true'
        run: |
          wget -O snap7-full-1.4.2.7z --content-disposition -c ${{ env.snap7-archive-url }}

      - name: Extract archive
        run: 7z x snap7-full-1.4.2.7z

      - name: copy files
        run: |
          mkdir src
          cp snap7-full-1.4.2/release/Wrappers/c-cpp/snap7.h src

      - name: Install cibuildwheel and wheel
        run: python3 -m pip install cibuildwheel==1.10.0 wheel --upgrade

      - name: Build wheels linux
        run: python3 -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: cp3*-manylinux_${{ matrix.arch }}
          CIBW_SKIP: cp35-* pp*
          CIBW_BEFORE_ALL_LINUX: cd snap7-full-1.4.2/build/unix/;make -f ${{ matrix.makefile }} install

      - name: move shared library to ./lib
        run: |
          cd wheelhouse
          for wheelname in $(ls *.whl)
          do
          dirname=$wheelname-dir
          packagename=$(python3 -m wheel unpack $wheelname -d $dirname | sed -e 's/.*\/\(.*\)...OK/\1/')
          mkdir -p $dirname/$packagename/snap7/lib
          mv $dirname/$packagename/python_snap7.libs/libsnap7-*.so $dirname/$packagename/snap7/lib/libsnap7.so
          rm -rf $dirname/$packagename/python_snap7.libs
          rm $dirname/$packagename/snap7/__dummy__*.so
          python3 -m wheel pack $dirname/$packagename -d ./
          rm -rf $dirname
          done

      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*.whl

  windows-build:
    name: Build binary wheels for windows
    runs-on: windows-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - arch: win_amd64
            dll_dir: Win64
          - arch: win32
            dll_dir: Win32
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install choco packages
        run: choco install 7zip wget python

      - name: Cache snap7-archive
        id: snap7-archive
        uses: actions/cache@v2
        with:
          path: snap7-full-1.4.2.7z
          key: ${{ env.snap7-archive-url }}

      - name: Get snap7
        if: steps.snap7-archive.outputs.cache-hit != 'true'
        run: |
          wget -O snap7-full-1.4.2.7z --content-disposition -c ${{ env.snap7-archive-url }}

      - name: Extract archive
        run: 7z x snap7-full-1.4.2.7z

      - name: update wheel
        run: python3 -m pip install wheel --upgrade

      - name: build wheel
        run: python3 setup.py bdist_wheel --plat-name ${{ matrix.arch }}

      - name: move dll to ./lib
        run: |
          New-Item -ItemType Directory wheelhouse
          Set-Location dist
          $wheels = Get-ChildItem *.whl
          foreach ($wheelname in $wheels) {
            $dirname = -join($wheelname, "-dir")
            $unpack_string = $(python3 -m wheel unpack $wheelname -d $dirname)
            $unpack_string -match ".*: (?<pkgname>.*)...Ok"
            $packagename = $matches['pkgname']
            $libdir = -join($packagename,"\snap7\lib")
            New-Item -ItemType Directory -Path $libdir
            Copy-Item ..\snap7-full-1.4.2\release\Windows\${{ matrix.dll_dir }}\snap7.dll $libdir
            python3 -m wheel pack $packagename -d ..\wheelhouse
            Remove-Item $dirname -Force -Recurse
          }

      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*.whl

  osx-build:
    name: Build binary wheels for osx
    runs-on: macos-10.15
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache snap7-archive
        id: snap7-archive
        uses: actions/cache@v2
        with:
          path: snap7-full-1.4.2.7z
          key: ${{ env.snap7-archive-url }}

      - name: Get snap7
        if: steps.snap7-archive.outputs.cache-hit != 'true'
        run: |
          wget -nv -O snap7-full-1.4.2.7z --content-disposition -c ${{ env.snap7-archive-url }}

      - name: Extract archive
        run: 7z x snap7-full-1.4.2.7z

      - name: copy files
        run: |
          mkdir src
          cp snap7-full-1.4.2/release/Wrappers/c-cpp/snap7.h src
          pushd snap7-full-1.4.2/build/osx/
          make -f x86_64_osx.mk all
          cp ../bin/x86_64-osx/libsnap7.dylib  /usr/local/lib
          install_name_tool -id /usr/local/lib/libsnap7.dylib /usr/local/lib/libsnap7.dylib

      - name: Install cibuildwheel
        run: python3 -m pip install cibuildwheel==1.10.0 wheel --upgrade

      - name: Build wheels
        run: python3 -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: cp3*-macosx*
          CIBW_SKIP: cp35-* pp*
          CIBW_BUILD_VERBOSITY: 1

      - name: move shared library to ./lib
        run: |
          cd wheelhouse
          for wheelname in $(ls *.whl)
          do
          dirname=$wheelname-dir
          packagename=$(python3 -m wheel unpack $wheelname -d $dirname | sed -e 's/.*\/\(.*\)...OK/\1/')
          mkdir -p $dirname/$packagename/snap7/lib
          mv $dirname/$packagename/snap7/.dylibs/libsnap7.dylib $dirname/$packagename/snap7/lib/libsnap7.dylib
          rm $dirname/$packagename/snap7/__dummy__*.so
          rm -rf $dirname/$packagename/snap7/.dylibs
          python3 -m wheel pack $dirname/$packagename -d ./
          rm -rf $dirname
          done

      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*.whl

  publish-to-TestPyPI:
    name: publish wheels to TestPyPI
    needs: [osx-build, linux-build, windows-build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: wheels
          path: wheelhouse

      - name: Publish distribution ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          packages_dir: wheelhouse
          verbose: true

  publish-to-PyPI:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    name: publish wheels to PyPI
    needs: [osx-build, linux-build, windows-build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: wheels
          path: wheelhouse

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: wheelhouse
