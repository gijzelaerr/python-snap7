name: Build and test wheels ARM64
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  linux-build-arm64:
    name: Build wheel for linux arm64
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare snap7 archive
        uses: ./.github/actions/prepare_snap7

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Build wheel for aarch64
        uses: ./.github/actions/manylinux_2_28_aarch64
        with:
          script: ./.github/build_scripts/build_package.sh
          platform: manylinux_2_28_aarch64
          makefile: aarch64-linux-gnu.mk
          python: /opt/python/cp38-cp38/bin/python

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: wheelhouse/*.whl

  test-wheels-arm64:
    name: Testing wheel for arm64
    needs: linux-build-arm64
    if: success() || failure()  # this makes sure the job runs even if another matrix job failed
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: wheels
          path: wheelhouse

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Run tests in docker:arm64v8
        run: |
          docker run --rm --interactive -v $PWD/tests:/tests \
            -v $PWD/pyproject.toml:/pyproject.toml \
            -v $PWD/wheelhouse:/wheelhouse \
            "arm64v8/python:${{ matrix.python-version }}-bookworm" /bin/bash -s <<EOF
          python3 -m pip install --upgrade pip
          python3 -m pip install $(ls wheelhouse/*_aarch64.whl)
          python3 -m pip install pytest
          python3 -m pytest tests/test_client.py tests/test_mainloop.py tests/test_server.py tests/test_util.py
          EOF
